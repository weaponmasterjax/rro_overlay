<?xml version="1.0" encoding="utf-8"?>
<resources>
   <array name="config_sfps_sensor_props" translatable="false">
      <item>@array/config_sfps_sensor_props_0</item>
   </array>
   <array name="config_sfps_sensor_props_0" translatable="false">
      <item></item>      <!--item>displayId</item-->
      <item>1080</item>      <!--item>sensorLocationX</item-->
      <item>955</item>      <!--item>sensorLocationY</item-->
      <item>110</item>      <!--item>sensorRadius</item-->
   </array>
   <!-- Array of hysteresis constraint values for brightening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The brightening threshold is calculated as
         lux * (1.0f + CONSTRAINT_VALUE). When the current lux is higher than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
   <integer-array name="config_ambientBrighteningThresholds">
      <item>5</item>
      <item>5</item>
      <item>10</item>
      <item>30</item>
      <item>100</item>
      <item>400</item>
      <item>600</item>
      <item>1000</item>
   </integer-array>

   <!-- Array of hysteresis constraint values for darkening, represented as tenths of a
         percent. The length of this array is assumed to be one greater than
         config_ambientThresholdLevels. The darkening threshold is calculated as
         lux * (1.0f - CONSTRAINT_VALUE). When the current lux is lower than this threshold,
         the screen brightness is recalculated. See the config_ambientThresholdLevels
         description for how the constraint value is chosen. -->
   <integer-array name="config_ambientDarkeningThresholds">
      <item>800</item>
      <item>800</item>
      <item>500</item>
      <item>500</item>
      <item>500</item>
      <item>500</item>
      <item>500</item>
      <item>500</item>
   </integer-array>
   <integer-array name="config_ambientThresholdLevels">
      <item>2</item>
      <item>10</item>
      <item>30</item>
      <item>100</item>
      <item>800</item>
      <item>2000</item>
      <item>4000</item>
   </integer-array>
   <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
   <integer-array name="config_keyboardTapVibePattern">
      <item>40</item>
   </integer-array>
   <!-- Vibrator pattern for notification -->
   <integer-array name="config_defaultNotificationVibePattern">
      <item>0</item>
      <item>350</item>
      <item>250</item>
      <item>350</item>
   </integer-array>
   <integer-array name="config_notificationFallbackVibePattern">
      <item>0</item>
      <item>100</item>
      <item>150</item>
      <item>100</item>
   </integer-array>
   <!-- Vibrator pattern for feedback about a long screen/key press -->
   <integer-array name="config_longPressVibePattern">
      <item>0</item>
      <item>1</item>
      <item>20</item>
      <item>21</item>
   </integer-array>

   <!-- Array of minimum brightness curve nits -->
   <array name="config_minimumBrightnessCurveNits">
      <item>0.0</item>
      <item>50.0</item>
      <item>90.0</item>
   </array>
   <!-- Array of ConnectivityManager.TYPE_xxxx values allowable for tethering -->
   <!-- Common options are [1, 4] for TYPE_WIFI and TYPE_MOBILE_DUN or <!== [0,1,5,7] for TYPE_MOBILE, TYPE_WIFI, TYPE_MOBILE_HIPRI and TYPE_BLUETOOTH -->
   <integer-array name="config_tether_upstream_types">
      <item>1</item>
      <item>0</item>
      <item>5</item>
      <item>7</item>
   </integer-array>
   <!-- Vibrator pattern for safemode enabled -->
   <integer-array name="config_safeModeEnabledVibePattern">
      <item>0</item>
      <item>1</item>
      <item>20</item>
      <item>21</item>
      <item>500</item>
      <item>600</item>
   </integer-array>
   <!-- Vibrator pattern for scrollbarrier -->
   <integer-array name="config_scrollBarrierVibePattern">
      <item>0</item>
      <item>15</item>
      <item>10</item>
      <item>10</item>
   </integer-array>
   <!-- Vibrator pattern for feedback about touching a virtual key -->
   <integer-array name="config_virtualKeyVibePattern">
      <item>0</item>
      <item>10</item>
      <item>20</item>
      <item>30</item>
   </integer-array>
   <!-- Array of light sensor lux values to define our levels for auto backlight brightness support.
         The N entries of this array define N + 1 control points as follows:
         (1-based arrays)
         Point 1:            (0, value[1]):             lux <= 0
         Point 2:     (level[1], value[2]):  0        < lux <= level[1]
         Point 3:     (level[2], value[3]):  level[2] < lux <= level[3]
         ...
         Point N+1: (level[N], value[N+1]):  level[N] < lux
         The control points must be strictly increasing.  Each control point
         corresponds to an entry in the brightness backlight values arrays.
         For example, if lux == level[1] (first element of the levels array)
         then the brightness will be determined by value[2] (second element
         of the brightness values array).
         Spline interpolation is used to determine the auto-brightness
         backlight values for lux levels between these control points.
         Must be overridden in platform specific overlays -->
   <integer-array name="config_autoBrightnessLevels">
      <item>1</item>
      <item>2</item>
      <item>4</item>
      <item>6</item>
      <item>8</item>
      <item>10</item>
      <item>15</item>
      <item>20</item>
      <item>25</item>
      <item>30</item>
      <item>35</item>
      <item>40</item>
      <item>45</item>
      <item>50</item>
      <item>55</item>
      <item>60</item>
      <item>65</item>
      <item>70</item>
      <item>75</item>
      <item>80</item>
      <item>85</item>
      <item>90</item>
      <item>95</item>
      <item>100</item>
      <item>120</item>
      <item>140</item>
      <item>160</item>
      <item>180</item>
      <item>200</item>
      <item>220</item>
      <item>240</item>
      <item>260</item>
      <item>280</item>
      <item>300</item>
      <item>320</item>
      <item>340</item>
      <item>360</item>
      <item>380</item>
      <item>400</item>
      <item>420</item>
      <item>440</item>
      <item>460</item>
      <item>480</item>
      <item>500</item>
      <item>700</item>
      <item>900</item>
      <item>1100</item>
      <item>1300</item>
      <item>1500</item>
      <item>1700</item>
      <item>1900</item>
      <item>2100</item>
      <item>2300</item>
      <item>2700</item>
      <item>3100</item>
      <item>3300</item>
      <item>3700</item>
      <item>4000</item>
      <item>4500</item>
   </integer-array>

   <!-- Array of desired screen brightness in nits corresponding to the lux values
         in the config_autoBrightnessLevels array. As with config_screenBrightnessMinimumNits and
         config_screenBrightnessMaximumNits, the display brightness is defined as the measured
         brightness of an all-white image.
         If this is defined then:
            - config_autoBrightnessLcdBacklightValues should not be defined
            - config_screenBrightnessNits must be defined
            - config_screenBrightnessBacklight must be defined
         This array should have size one greater than the size of the config_autoBrightnessLevels
         array. The brightness values must be non-negative and non-decreasing. This must be
         overridden in platform specific overlays -->

   <integer-array name="config_autoBrightnessLcdBacklightValues">
      <item>21</item>
      <item>40</item>
      <item>77</item>
      <item>111</item>
      <item>133</item>
      <item>175</item>
      <item>245</item>
      <item>302</item>
      <item>322</item>
      <item>358</item>
      <item>382</item>
      <item>404</item>
      <item>406</item>
      <item>407</item>
      <item>408</item>
      <item>409</item>
      <item>412</item>
      <item>414</item>
      <item>416</item>
      <item>417</item>
      <item>419</item>
      <item>420</item>
      <item>423</item>
      <item>426</item>
      <item>428</item>
      <item>432</item>
      <item>442</item>
      <item>449</item>
      <item>456</item>
      <item>458</item>
      <item>466</item>
      <item>472</item>
      <item>479</item>
      <item>486</item>
      <item>494</item>
      <item>500</item>
      <item>507</item>
      <item>516</item>
      <item>522</item>
      <item>530</item>
      <item>536</item>
      <item>545</item>
      <item>550</item>
      <item>559</item>
      <item>565</item>
      <item>674</item>
      <item>783</item>
      <item>905</item>
      <item>1028</item>
      <item>1152</item>
      <item>1284</item>
      <item>1418</item>
      <item>1500</item>
      <item>1600</item>
      <item>1700</item>
      <item>1800</item>
      <item>1800</item>
      <item>1947</item>
      <item>2047</item>
      <item>2047</item>
   </integer-array>

</resources>
